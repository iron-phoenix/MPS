package tracer.sandbox;

/*Generated by MPS */

import tracer.runtime.Tracer;
import tracer.runtime.TracerContext;

public class Test {
  /*package*/ int n = 6;


  public Test() {
    Tracer.constructorCall(new TracerContext("true"), "Test");
  }



  public Test(int v) {
    Tracer.constructorCall(new TracerContext("true"), "Test");
    n = Tracer.assignment(new TracerContext("true"), "n", Tracer.varReference(new TracerContext("true"), "v", v), "=");
  }



  /*package*/ int assignments(String s) {
    Tracer.call(new TracerContext("true"), "assignments");
    int k;
    s = Tracer.assignment(new TracerContext("true"), "s", "test2", "=");
    n = Tracer.assignment(new TracerContext("true"), "n", k = 8, "=");
    this.n = Tracer.assignment(new TracerContext("true"), "Test.n", 19, "=");
    k = Tracer.assignment(new TracerContext("true"), "k", Tracer.varReference(new TracerContext("true"), "n", n) + Tracer.varReference(new TracerContext("true"), "s", s).length(), "=");
    Tracer.unaryOperation(new TracerContext("true"), "k", ++k, "++");

    
    voidMethod();
    Tracer.returnVoid(new TracerContext("true"), "voidMethod");;

    return 3232;
  }



  /*package*/ void voidMethod() {
    Tracer.call(new TracerContext("true"), "voidMethod");
    System.out.println("We're inside void method");
  }



  public static void main(String[] args) {
    Tracer.call(new TracerContext("true"), "main");
    Test a = Tracer.constructorReturn(new TracerContext("true"), "Test", new Test());
    Tracer.returnValue(new TracerContext("true"), "assignments", Tracer.varReference(new TracerContext("true"), "a", a).assignments("qwerty"));

    Test b = Tracer.constructorReturn(new TracerContext("true"), "Test", new Test(142));
    
    Tracer.varReference(new TracerContext("true"), "b", b).voidMethod();
    Tracer.returnVoid(new TracerContext("true"), "voidMethod");;
  }






}
