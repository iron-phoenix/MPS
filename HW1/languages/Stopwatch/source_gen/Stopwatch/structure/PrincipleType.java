package Stopwatch.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum PrincipleType {
  Mechanical("Mechanical", "mechanical"),
  Digital("Digital", "digital");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<PrincipleType> getConstants() {
    List<PrincipleType> list = ListSequence.fromList(new LinkedList<PrincipleType>());
    ListSequence.fromList(list).addElement(PrincipleType.Mechanical);
    ListSequence.fromList(list).addElement(PrincipleType.Digital);
    return list;
  }

  public static PrincipleType getDefault() {
    return PrincipleType.Mechanical;
  }

  public static PrincipleType parseValue(String value) {
    if (value == null) {
      return PrincipleType.getDefault();
    }
    if (value.equals(PrincipleType.Mechanical.getValueAsString())) {
      return PrincipleType.Mechanical;
    }
    if (value.equals(PrincipleType.Digital.getValueAsString())) {
      return PrincipleType.Digital;
    }
    return PrincipleType.getDefault();
  }

  private String myValue;

  PrincipleType(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
