package tracer.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.template.MappingScriptContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.List;
import tracer.runtime.Tracer;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.smodel.SReference;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

@Generated
public class QueriesGenerated {
  public final boolean NEEDS_OPCONTEXT = false;

  public static void mappingScript_CodeBlock_1180016765150195565(final MappingScriptContext _context) {
    if (!(ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "tracer.structure.Log")).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode it) {
        return SLinkOperations.getTargets(it, "tracers", true);
      }
    }).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "tracer.structure.ModificationsTracer");
      }
    }))) {
      return;
    }

    SNode logFormat = SLinkOperations.getTarget(ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "tracer.structure.Log")).first(), "format", true);
    SNode context = _quotation_createNode_x583g4_a0d0b(SPropertyOperations.getBoolean(logFormat, "time") + "");

    List<SNode> mods = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression");
    ListSequence.fromList(mods).addSequence(ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation")));

    for (SNode exp : ListSequence.fromList(mods)) {
      if (SNodeOperations.isInstanceOf(exp, "jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression")) {
        SNode expr = SNodeOperations.as(exp, "jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression");
        SLinkOperations.setTarget(expr, "rValue", _quotation_createNode_x583g4_a0b0a0i0b(context, Tracer.getVariableName(SLinkOperations.getTarget(expr, "lValue", true)), SLinkOperations.getTarget(expr, "rValue", true), SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(expr), "conceptAlias")), true);
      } else if (!(SNodeOperations.isInstanceOf(exp, "jetbrains.mps.baseLanguage.structure.UnaryMinus")) && (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.as(exp, "jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation"), "expression", true), "jetbrains.mps.baseLanguage.structure.VariableReference") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.as(exp, "jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation"), "expression", true), "jetbrains.mps.baseLanguage.structure.DotExpression"))) {
        SNode expr = SNodeOperations.as(exp, "jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation");
        SNodeOperations.replaceWithAnother(expr, _quotation_createNode_x583g4_a0a1a0a0i0b(context, Tracer.getVariableName(SLinkOperations.getTarget(expr, "expression", true)), expr, SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(expr), "conceptAlias")));
      }
    }
  }

  public static void mappingScript_CodeBlock_5504672902128771601(final MappingScriptContext _context) {
    if (!(ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "tracer.structure.Log")).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode it) {
        return SLinkOperations.getTargets(it, "tracers", true);
      }
    }).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "tracer.structure.ReferencesTracer");
      }
    }))) {
      return;
    }

    SNode logFormat = SLinkOperations.getTarget(ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "tracer.structure.Log")).first(), "format", true);
    SNode context = _quotation_createNode_x583g4_a0d0c(SPropertyOperations.getBoolean(logFormat, "time") + "");

    for (SNode var : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.baseLanguage.structure.VariableReference"))) {
      if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(var), "jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression") || (SNodeOperations.isInstanceOf(SNodeOperations.getParent(var), "jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation") && !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(var), "jetbrains.mps.baseLanguage.structure.UnaryMinus")))) && ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), null)).contains(SLinkOperations.getTarget(var, "variableDeclaration", false))) {
        SNodeOperations.replaceWithAnother(var, _quotation_createNode_x583g4_a0a0a0a5a2(context, Tracer.getVariableName(var), var));
      }
    }

    for (SNode assignment : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression"))) {
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(assignment, "rValue", true), "jetbrains.mps.baseLanguage.structure.VariableReference") && ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), null)).contains(SLinkOperations.getTarget(SNodeOperations.as(SLinkOperations.getTarget(assignment, "rValue", true), "jetbrains.mps.baseLanguage.structure.VariableReference"), "variableDeclaration", false))) {
        SNodeOperations.replaceWithAnother(SLinkOperations.getTarget(assignment, "rValue", true), _quotation_createNode_x583g4_a0a0a0a7a2(context, Tracer.getVariableName(SLinkOperations.getTarget(assignment, "rValue", true)), SLinkOperations.getTarget(assignment, "rValue", true)));
      }
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(assignment, "rValue", true), "jetbrains.mps.baseLanguage.structure.DotExpression") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.as(SLinkOperations.getTarget(assignment, "rValue", true), "jetbrains.mps.baseLanguage.structure.DotExpression"), "operation", true), "jetbrains.mps.baseLanguage.structure.FieldReferenceOperation") && ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), null)).contains(SLinkOperations.getTarget(SNodeOperations.as(SLinkOperations.getTarget(SNodeOperations.as(SLinkOperations.getTarget(assignment, "rValue", true), "jetbrains.mps.baseLanguage.structure.DotExpression"), "operation", true), "jetbrains.mps.baseLanguage.structure.FieldReferenceOperation"), "fieldDeclaration", false))) {
        SNodeOperations.replaceWithAnother(SLinkOperations.getTarget(assignment, "rValue", true), _quotation_createNode_x583g4_a0a0a1a7a2(context, Tracer.getVariableName(SLinkOperations.getTarget(assignment, "rValue", true)), SLinkOperations.getTarget(assignment, "rValue", true)));
      }
    }

    for (SNode field : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.baseLanguage.structure.FieldReferenceOperation"))) {
      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(field)), "jetbrains.mps.baseLanguage.structure.DotExpression") || !(!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(field)), "jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression") || (SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(field)), "jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation") && !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(field)), "jetbrains.mps.baseLanguage.structure.UnaryMinus"))))) || !(ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), null)).contains(SLinkOperations.getTarget(field, "fieldDeclaration", false)))) {
        continue;
      }
      SNodeOperations.replaceWithAnother(SNodeOperations.getParent(field), _quotation_createNode_x583g4_a0a1a9a2(context, Tracer.getVariableName(SNodeOperations.as(SNodeOperations.getParent(field), "jetbrains.mps.baseLanguage.structure.Expression")), SNodeOperations.getParent(field)));
    }

  }

  public static void mappingScript_CodeBlock_1812980409690698650(final MappingScriptContext _context) {
    if (!(ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "tracer.structure.Log")).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode it) {
        return SLinkOperations.getTargets(it, "tracers", true);
      }
    }).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "tracer.structure.CallingTracer");
      }
    }))) {
      return;
    }

    SNode logFormat = SLinkOperations.getTarget(ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "tracer.structure.Log")).first(), "format", true);
    SNode context = _quotation_createNode_x583g4_a0d0d(SPropertyOperations.getBoolean(logFormat, "time") + "");

    for (SNode conctructor : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.baseLanguage.structure.ClassCreator"))) {
      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(conctructor), "jetbrains.mps.baseLanguage.structure.GenericNewExpression") && ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), null)).contains(SLinkOperations.getTarget(conctructor, "baseMethodDeclaration", false))) {
        int indexStatement = ListSequence.fromList(SNodeOperations.getAncestors(conctructor, null, false)).indexOf(ListSequence.fromList(SNodeOperations.getAncestors(conctructor, null, false)).findFirst(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return SNodeOperations.isInstanceOf(it, "jetbrains.mps.baseLanguage.structure.StatementList");
          }
        }));
        int index = ((indexStatement - 1 < 0) ? 0 : ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.getAncestor(conctructor, "jetbrains.mps.baseLanguage.structure.StatementList", false, false))).indexOf(ListSequence.fromList(SNodeOperations.getAncestors(conctructor, null, false)).getElement(indexStatement - 1)));
        ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(conctructor, "jetbrains.mps.baseLanguage.structure.StatementList", false, false), "statement", true)).insertElement(index, _quotation_createNode_x583g4_a0a2a0a5a3(context, SPropertyOperations.getString(SLinkOperations.getTarget(conctructor, "baseMethodDeclaration", false), "nestedName")));
        ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(conctructor, "jetbrains.mps.baseLanguage.structure.StatementList", false, false), "statement", true)).insertElement(index + 2, _quotation_createNode_x583g4_a0a3a0a5a3(context, SPropertyOperations.getString(SLinkOperations.getTarget(conctructor, "baseMethodDeclaration", false), "nestedName")));

      }
    }

    for (SNode methodDeclaration : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.baseLanguage.structure.MethodDeclaration"))) {
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(methodDeclaration, "body", true), "statement", true)).insertElement(0, _quotation_createNode_x583g4_a0a0a7a3(context, SPropertyOperations.getString(methodDeclaration, "name")));
    }

    for (SNode call : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.baseLanguage.structure.StaticMethodCall"))) {
      if (!(ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), null)).contains(SLinkOperations.getTarget(call, "baseMethodDeclaration", false)))) {
        continue;
      }
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(call, "baseMethodDeclaration", false), "returnType", true), "jetbrains.mps.baseLanguage.structure.VoidType")) {
        SNodeOperations.replaceWithAnother(SNodeOperations.getParent(call), _quotation_createNode_x583g4_a0a0a1a9a3(SNodeOperations.getParent(call), context, SPropertyOperations.getString(SLinkOperations.getTarget(call, "baseMethodDeclaration", false), "name")));
      } else {
        SNodeOperations.replaceWithAnother(call, _quotation_createNode_x583g4_a0a0a0b0j0d(context, SPropertyOperations.getString(SLinkOperations.getTarget(call, "baseMethodDeclaration", false), "name"), SNodeOperations.getParent(call)));
      }
    }

    for (SNode call : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.baseLanguage.structure.LocalMethodCall"))) {
      if (!(ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), null)).contains(SLinkOperations.getTarget(call, "baseMethodDeclaration", false)))) {
        continue;
      }
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(call, "baseMethodDeclaration", false), "returnType", true), "jetbrains.mps.baseLanguage.structure.VoidType")) {
        SNodeOperations.replaceWithAnother(call, _quotation_createNode_x583g4_a0a0a1a11a3(call, context, SPropertyOperations.getString(SLinkOperations.getTarget(call, "baseMethodDeclaration", false), "name")));
      } else {
        SNodeOperations.replaceWithAnother(call, _quotation_createNode_x583g4_a0a0a0b0l0d(context, SPropertyOperations.getString(SLinkOperations.getTarget(call, "baseMethodDeclaration", false), "name"), call));
      }
    }


    for (SNode call : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"))) {
      if (!(ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), null)).contains(SLinkOperations.getTarget(call, "baseMethodDeclaration", false)))) {
        continue;
      }
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(call, "baseMethodDeclaration", false), "returnType", true), "jetbrains.mps.baseLanguage.structure.VoidType")) {
        SNodeOperations.replaceWithAnother(SNodeOperations.getParent(call), _quotation_createNode_x583g4_a0a0a1a41a3(SNodeOperations.getParent(call), context, SPropertyOperations.getString(SLinkOperations.getTarget(call, "baseMethodDeclaration", false), "name")));
      } else {
        SNodeOperations.replaceWithAnother(SNodeOperations.getParent(call), _quotation_createNode_x583g4_a0a0a0b0o0d(context, SPropertyOperations.getString(SLinkOperations.getTarget(call, "baseMethodDeclaration", false), "name"), SNodeOperations.getParent(call)));
      }
    }
  }

  private static SNode _quotation_createNode_x583g4_a0d0b(Object parameter_1) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, null, false);
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator", null, null, false);
    quotedNode_3.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_3, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1812980409701229162")));
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_4, "value", (String) parameter_1);
    quotedNode_3.addChild("actualArgument", quotedNode_4);
    quotedNode_2.addChild("creator", quotedNode_3);
    return quotedNode_2;
  }

  private static SNode _quotation_createNode_x583g4_a0b0a0i0b(Object parameter_1, Object parameter_2, Object parameter_3, Object parameter_4) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    SNode quotedNode_8 = null;
    SNode quotedNode_9 = null;
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_5.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_5, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("5504672902127427611")));
    quotedNode_5.setReference("classConcept", SReference.create("classConcept", quotedNode_5, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_6 = (SNode) parameter_1;
    if (quotedNode_6 != null) {
      quotedNode_5.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_6));
    }
    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_7, "value", (String) parameter_2);
    quotedNode_5.addChild("actualArgument", quotedNode_7);
    quotedNode_8 = (SNode) parameter_3;
    if (quotedNode_8 != null) {
      quotedNode_5.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_8));
    }
    quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_9, "value", (String) parameter_4);
    quotedNode_5.addChild("actualArgument", quotedNode_9);
    return quotedNode_5;
  }

  private static SNode _quotation_createNode_x583g4_a0a1a0a0i0b(Object parameter_1, Object parameter_2, Object parameter_3, Object parameter_4) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    SNode quotedNode_8 = null;
    SNode quotedNode_9 = null;
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_5.setReference("classConcept", SReference.create("classConcept", quotedNode_5, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_5.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_5, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("5504672902128043557")));
    quotedNode_6 = (SNode) parameter_1;
    if (quotedNode_6 != null) {
      quotedNode_5.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_6));
    }
    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_7, "value", (String) parameter_2);
    quotedNode_5.addChild("actualArgument", quotedNode_7);
    quotedNode_8 = (SNode) parameter_3;
    if (quotedNode_8 != null) {
      quotedNode_5.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_8));
    }
    quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_9, "value", (String) parameter_4);
    quotedNode_5.addChild("actualArgument", quotedNode_9);
    return quotedNode_5;
  }

  private static SNode _quotation_createNode_x583g4_a0d0c(Object parameter_1) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, null, false);
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator", null, null, false);
    quotedNode_3.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_3, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1812980409701229162")));
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_4, "value", (String) parameter_1);
    quotedNode_3.addChild("actualArgument", quotedNode_4);
    quotedNode_2.addChild("creator", quotedNode_3);
    return quotedNode_2;
  }

  private static SNode _quotation_createNode_x583g4_a0a0a0a5a2(Object parameter_1, Object parameter_2, Object parameter_3) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_4.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("5504672902126514118")));
    quotedNode_4.setReference("classConcept", SReference.create("classConcept", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_5 = (SNode) parameter_1;
    if (quotedNode_5 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_5));
    }
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_6, "value", (String) parameter_2);
    quotedNode_4.addChild("actualArgument", quotedNode_6);
    quotedNode_7 = (SNode) parameter_3;
    if (quotedNode_7 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_7));
    }
    return quotedNode_4;
  }

  private static SNode _quotation_createNode_x583g4_a0a0a0a7a2(Object parameter_1, Object parameter_2, Object parameter_3) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_4.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("5504672902126514118")));
    quotedNode_4.setReference("classConcept", SReference.create("classConcept", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_5 = (SNode) parameter_1;
    if (quotedNode_5 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_5));
    }
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_6, "value", (String) parameter_2);
    quotedNode_4.addChild("actualArgument", quotedNode_6);
    quotedNode_7 = (SNode) parameter_3;
    if (quotedNode_7 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_7));
    }
    return quotedNode_4;
  }

  private static SNode _quotation_createNode_x583g4_a0a0a1a7a2(Object parameter_1, Object parameter_2, Object parameter_3) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_4.setReference("classConcept", SReference.create("classConcept", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_4.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("5504672902126514118")));
    quotedNode_5 = (SNode) parameter_1;
    if (quotedNode_5 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_5));
    }
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_6, "value", (String) parameter_2);
    quotedNode_4.addChild("actualArgument", quotedNode_6);
    quotedNode_7 = (SNode) parameter_3;
    if (quotedNode_7 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_7));
    }
    return quotedNode_4;
  }

  private static SNode _quotation_createNode_x583g4_a0a1a9a2(Object parameter_1, Object parameter_2, Object parameter_3) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_4.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("5504672902126514118")));
    quotedNode_4.setReference("classConcept", SReference.create("classConcept", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_5 = (SNode) parameter_1;
    if (quotedNode_5 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_5));
    }
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_6, "value", (String) parameter_2);
    quotedNode_4.addChild("actualArgument", quotedNode_6);
    quotedNode_7 = (SNode) parameter_3;
    if (quotedNode_7 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_7));
    }
    return quotedNode_4;
  }

  private static SNode _quotation_createNode_x583g4_a0d0d(Object parameter_1) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, null, false);
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator", null, null, false);
    quotedNode_3.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_3, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1812980409701229162")));
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_4, "value", (String) parameter_1);
    quotedNode_3.addChild("actualArgument", quotedNode_4);
    quotedNode_2.addChild("creator", quotedNode_3);
    return quotedNode_2;
  }

  private static SNode _quotation_createNode_x583g4_a0a2a0a5a3(Object parameter_1, Object parameter_2) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, false);
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, false);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_5.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_5, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1812980409692841541")));
    quotedNode_5.setReference("classConcept", SReference.create("classConcept", quotedNode_5, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_6 = (SNode) parameter_1;
    if (quotedNode_6 != null) {
      quotedNode_5.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_6));
    }
    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_7, "value", (String) parameter_2);
    quotedNode_5.addChild("actualArgument", quotedNode_7);
    quotedNode_4.addChild("expression", quotedNode_5);
    quotedNode_3.addChild("statement", quotedNode_4);
    return quotedNode_3;
  }

  private static SNode _quotation_createNode_x583g4_a0a3a0a5a3(Object parameter_1, Object parameter_2) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, false);
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, false);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_5.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_5, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1812980409692846239")));
    quotedNode_5.setReference("classConcept", SReference.create("classConcept", quotedNode_5, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_6 = (SNode) parameter_1;
    if (quotedNode_6 != null) {
      quotedNode_5.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_6));
    }
    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_7, "value", (String) parameter_2);
    quotedNode_5.addChild("actualArgument", quotedNode_7);
    quotedNode_4.addChild("expression", quotedNode_5);
    quotedNode_3.addChild("statement", quotedNode_4);
    return quotedNode_3;
  }

  private static SNode _quotation_createNode_x583g4_a0a0a7a3(Object parameter_1, Object parameter_2) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, false);
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, false);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_5.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_5, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1812980409690746146")));
    quotedNode_5.setReference("classConcept", SReference.create("classConcept", quotedNode_5, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_6 = (SNode) parameter_1;
    if (quotedNode_6 != null) {
      quotedNode_5.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_6));
    }
    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_7, "value", (String) parameter_2);
    quotedNode_5.addChild("actualArgument", quotedNode_7);
    quotedNode_4.addChild("expression", quotedNode_5);
    quotedNode_3.addChild("statement", quotedNode_4);
    return quotedNode_3;
  }

  private static SNode _quotation_createNode_x583g4_a0a0a1a9a3(Object parameter_1, Object parameter_2, Object parameter_3) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    SNode quotedNode_8 = null;
    SNode quotedNode_9 = null;
    SNode quotedNode_10 = null;
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, false);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, false);
    quotedNode_7 = (SNode) parameter_1;
    if (quotedNode_7 != null) {
      quotedNode_5.addChild("expression", HUtil.copyIfNecessary(quotedNode_7));
    }
    quotedNode_4.addChild("statement", quotedNode_5);
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, false);
    quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_8.setReference("classConcept", SReference.create("classConcept", quotedNode_8, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_8.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_8, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1812980409691492741")));
    quotedNode_9 = (SNode) parameter_2;
    if (quotedNode_9 != null) {
      quotedNode_8.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_9));
    }
    quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_10, "value", (String) parameter_3);
    quotedNode_8.addChild("actualArgument", quotedNode_10);
    quotedNode_6.addChild("expression", quotedNode_8);
    quotedNode_4.addChild("statement", quotedNode_6);
    return quotedNode_4;
  }

  private static SNode _quotation_createNode_x583g4_a0a0a0b0j0d(Object parameter_1, Object parameter_2, Object parameter_3) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_4.setReference("classConcept", SReference.create("classConcept", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_4.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1812980409691514250")));
    quotedNode_5 = (SNode) parameter_1;
    if (quotedNode_5 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_5));
    }
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_6, "value", (String) parameter_2);
    quotedNode_4.addChild("actualArgument", quotedNode_6);
    quotedNode_7 = (SNode) parameter_3;
    if (quotedNode_7 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_7));
    }
    return quotedNode_4;
  }

  private static SNode _quotation_createNode_x583g4_a0a0a1a11a3(Object parameter_1, Object parameter_2, Object parameter_3) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    SNode quotedNode_8 = null;
    SNode quotedNode_9 = null;
    SNode quotedNode_10 = null;
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, false);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, false);
    quotedNode_7 = (SNode) parameter_1;
    if (quotedNode_7 != null) {
      quotedNode_5.addChild("expression", HUtil.copyIfNecessary(quotedNode_7));
    }
    quotedNode_4.addChild("statement", quotedNode_5);
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, false);
    quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_8.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_8, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1812980409691492741")));
    quotedNode_8.setReference("classConcept", SReference.create("classConcept", quotedNode_8, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_9 = (SNode) parameter_2;
    if (quotedNode_9 != null) {
      quotedNode_8.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_9));
    }
    quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_10, "value", (String) parameter_3);
    quotedNode_8.addChild("actualArgument", quotedNode_10);
    quotedNode_6.addChild("expression", quotedNode_8);
    quotedNode_4.addChild("statement", quotedNode_6);
    return quotedNode_4;
  }

  private static SNode _quotation_createNode_x583g4_a0a0a0b0l0d(Object parameter_1, Object parameter_2, Object parameter_3) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_4.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1812980409691514250")));
    quotedNode_4.setReference("classConcept", SReference.create("classConcept", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_5 = (SNode) parameter_1;
    if (quotedNode_5 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_5));
    }
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_6, "value", (String) parameter_2);
    quotedNode_4.addChild("actualArgument", quotedNode_6);
    quotedNode_7 = (SNode) parameter_3;
    if (quotedNode_7 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_7));
    }
    return quotedNode_4;
  }

  private static SNode _quotation_createNode_x583g4_a0a0a1a41a3(Object parameter_1, Object parameter_2, Object parameter_3) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    SNode quotedNode_8 = null;
    SNode quotedNode_9 = null;
    SNode quotedNode_10 = null;
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, false);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, false);
    quotedNode_7 = (SNode) parameter_1;
    if (quotedNode_7 != null) {
      quotedNode_5.addChild("expression", HUtil.copyIfNecessary(quotedNode_7));
    }
    quotedNode_4.addChild("statement", quotedNode_5);
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, false);
    quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_8.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_8, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1812980409691492741")));
    quotedNode_8.setReference("classConcept", SReference.create("classConcept", quotedNode_8, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_9 = (SNode) parameter_2;
    if (quotedNode_9 != null) {
      quotedNode_8.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_9));
    }
    quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_10, "value", (String) parameter_3);
    quotedNode_8.addChild("actualArgument", quotedNode_10);
    quotedNode_6.addChild("expression", quotedNode_8);
    quotedNode_4.addChild("statement", quotedNode_6);
    return quotedNode_4;
  }

  private static SNode _quotation_createNode_x583g4_a0a0a0b0o0d(Object parameter_1, Object parameter_2, Object parameter_3) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, null, false);
    quotedNode_4.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1812980409691514250")));
    quotedNode_4.setReference("classConcept", SReference.create("classConcept", quotedNode_4, facade.createModelReference("r:a2c5f272-20b1-463c-ad12-97c6ae9bbb6a(tracer.runtime)"), facade.createNodeId("1180016765149615085")));
    quotedNode_5 = (SNode) parameter_1;
    if (quotedNode_5 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_5));
    }
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_6, "value", (String) parameter_2);
    quotedNode_4.addChild("actualArgument", quotedNode_6);
    quotedNode_7 = (SNode) parameter_3;
    if (quotedNode_7 != null) {
      quotedNode_4.addChild("actualArgument", HUtil.copyIfNecessary(quotedNode_7));
    }
    return quotedNode_4;
  }
}
