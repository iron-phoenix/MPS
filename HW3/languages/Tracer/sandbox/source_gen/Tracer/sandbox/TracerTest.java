package Tracer.sandbox;

/*Generated by MPS */

import tracer.runtime.Tracer;
import tracer.runtime.TracerContext;

public class TracerTest {
  private int field = 42;


  public TracerTest() {
    Tracer.constructorCall(new TracerContext("true"), "TracerTest");
  }



  public TracerTest(int f) {
    Tracer.constructorCall(new TracerContext("true"), "TracerTest");
    field = Tracer.assignment(new TracerContext("true"), "field", Tracer.varReference(new TracerContext("true"), "f", f), "=");
  }



  private void helloWorld() {
    Tracer.call(new TracerContext("true"), "helloWorld");
    System.out.println("Hello, world");
  }



  public int something(String s) {
    Tracer.call(new TracerContext("true"), "something");
    int a;
    s = Tracer.assignment(new TracerContext("true"), "s", "Hi", "=");
    a = Tracer.assignment(new TracerContext("true"), "a", 11, "=");
    field = Tracer.assignment(new TracerContext("true"), "field", Tracer.varReference(new TracerContext("true"), "a", a), "=");
    a = Tracer.assignment(new TracerContext("true"), "a", Tracer.varReference(new TracerContext("true"), "field", field) + Tracer.varReference(new TracerContext("true"), "s", s).length(), "=");
    Tracer.unaryOperation(new TracerContext("true"), "a", ++a, "++");
    Tracer.unaryOperation(new TracerContext("true"), "a", a++, "postfix increment");
    
    helloWorld();
    Tracer.returnVoid(new TracerContext("true"), "helloWorld");;
    return Tracer.varReference(new TracerContext("true"), "a", a);
  }



  public static void main(String[] args) {
    Tracer.call(new TracerContext("true"), "main");
    TracerTest test1 = Tracer.constructorReturn(new TracerContext("true"), "TracerTest", new TracerTest());
    Tracer.returnValue(new TracerContext("true"), "something", Tracer.varReference(new TracerContext("true"), "test1", test1).something("Live long and prosper!"));
    TracerTest test2 = Tracer.constructorReturn(new TracerContext("true"), "TracerTest", new TracerTest(7));
    
    Tracer.varReference(new TracerContext("true"), "test2", test2).helloWorld();
    Tracer.returnVoid(new TracerContext("true"), "helloWorld");;
  }
}
