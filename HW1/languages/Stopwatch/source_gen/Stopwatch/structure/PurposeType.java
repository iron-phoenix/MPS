package Stopwatch.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum PurposeType {
  Everyday("Everyday", "everyday"),
  Industrial("Industrial", "industrial");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<PurposeType> getConstants() {
    List<PurposeType> list = ListSequence.fromList(new LinkedList<PurposeType>());
    ListSequence.fromList(list).addElement(PurposeType.Everyday);
    ListSequence.fromList(list).addElement(PurposeType.Industrial);
    return list;
  }

  public static PurposeType getDefault() {
    return PurposeType.Everyday;
  }

  public static PurposeType parseValue(String value) {
    if (value == null) {
      return PurposeType.getDefault();
    }
    if (value.equals(PurposeType.Everyday.getValueAsString())) {
      return PurposeType.Everyday;
    }
    if (value.equals(PurposeType.Industrial.getValueAsString())) {
      return PurposeType.Industrial;
    }
    return PurposeType.getDefault();
  }

  private String myValue;

  PurposeType(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
