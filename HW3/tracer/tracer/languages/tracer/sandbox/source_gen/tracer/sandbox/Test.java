package tracer.sandbox;

/*Generated by MPS */

import tracer.runtime.Tracer;
import tracer.runtime.TracerContext;

public class Test {
  /*package*/ int n = 71;


  public Test() {
    this(5);
  }




  public Test(int v) {
    n = Tracer.assignment(new TracerContext(true), "n", Tracer.varReference(new TracerContext(true), "v", v), "=");
  }



  /*package*/ int assignments(String s) {
    Tracer.call(new TracerContext(true), "assignments");
    int k;
    s = Tracer.assignment(new TracerContext(true), "s", "Hello, world!", "=");
    n = Tracer.assignment(new TracerContext(true), "n", 7, "=");
    this.n = Tracer.assignment(new TracerContext(true), "Test.n", 21, "=");
    k = Tracer.assignment(new TracerContext(true), "k", Tracer.varReference(new TracerContext(true), "n", n) + Tracer.varReference(new TracerContext(true), "s", s).length(), "=");
    Tracer.unaryOperation(new TracerContext(true), "k", ++k, "++");

    return 42;
  }



  /*package*/ void helloWorld() {
    Tracer.call(new TracerContext(true), "helloWorld");
    System.out.println("Hello, world!");
  }



  public static void main(String[] args) {
    Tracer.call(new TracerContext(true), "main");
    Tracer.constructorCall(new TracerContext(true), "Test");
    Test a = new Test();
    Tracer.constructorReturn(new TracerContext(true), "Test");
    Tracer.returnValue(new TracerContext(true), "assignments", Tracer.varReference(new TracerContext(true), "a", a).assignments("qwerty"));

    Tracer.constructorCall(new TracerContext(true), "Test");
    Test b = new Test(142);
    Tracer.constructorReturn(new TracerContext(true), "Test");
    
    Tracer.varReference(new TracerContext(true), "b", b).helloWorld();
    Tracer.returnVoid(new TracerContext(true), "helloWorld");;
  }
}
