package Stopwatch.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum UsageType {
  Portable("Portable", "portable"),
  Stationary("Stationary", "stationary");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<UsageType> getConstants() {
    List<UsageType> list = ListSequence.fromList(new LinkedList<UsageType>());
    ListSequence.fromList(list).addElement(UsageType.Portable);
    ListSequence.fromList(list).addElement(UsageType.Stationary);
    return list;
  }

  public static UsageType getDefault() {
    return UsageType.Portable;
  }

  public static UsageType parseValue(String value) {
    if (value == null) {
      return UsageType.getDefault();
    }
    if (value.equals(UsageType.Portable.getValueAsString())) {
      return UsageType.Portable;
    }
    if (value.equals(UsageType.Stationary.getValueAsString())) {
      return UsageType.Stationary;
    }
    return UsageType.getDefault();
  }

  private String myValue;

  UsageType(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
