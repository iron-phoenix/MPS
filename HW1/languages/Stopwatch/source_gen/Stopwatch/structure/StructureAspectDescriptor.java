package Stopwatch.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("Stopwatch.structure.Action").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("type").create();
      case 1:
        return new ConceptDescriptorBuilder("Stopwatch.structure.Appearance").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("shape", "height", "width").children(new String[]{"color"}, new boolean[]{false}).create();
      case 2:
        return new ConceptDescriptorBuilder("Stopwatch.structure.Button").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"action"}, new boolean[]{true}).create();
      case 3:
        return new ConceptDescriptorBuilder("Stopwatch.structure.ColorReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("color").create();
      case 4:
        return new ConceptDescriptorBuilder("Stopwatch.structure.Stopwatch").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").properties("principle", "purpose", "usage").children(new String[]{"appearance", "maximumTime", "buttons", "timelines"}, new boolean[]{false, false, true, true}).create();
      case 5:
        return new ConceptDescriptorBuilder("Stopwatch.structure.Time").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("value", "unit").create();
      case 6:
        return new ConceptDescriptorBuilder("Stopwatch.structure.Timeline").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"accuracy", "turnAroundTime"}, new boolean[]{false, false}).create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"Stopwatch.structure.Action", "Stopwatch.structure.Appearance", "Stopwatch.structure.Button", "Stopwatch.structure.ColorReference", "Stopwatch.structure.Stopwatch", "Stopwatch.structure.Time", "Stopwatch.structure.Timeline"};
}
